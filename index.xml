<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on Zephan </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://shitoudev.github.io/</link>
    <language>en-us</language>
    
    
    <updated>Thu, 28 Jan 2016 12:37:22 CST</updated>
    
    <item>
      <title>如何在一个iOS项目中使用 Objective-C 和 Swift</title>
      <link>http://shitoudev.github.io/post/how-to-use-both-swift-and-objective-c-in-one-project/</link>
      <pubDate>Thu, 28 Jan 2016 12:37:22 CST</pubDate>
      
      <guid>http://shitoudev.github.io/post/how-to-use-both-swift-and-objective-c-in-one-project/</guid>
      <description>&lt;p&gt;作者：Thomas Hanning &lt;a href=&#34;http://www.thomashanning.com/swift-and-objective-c-interoperability/&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Objective-C 和 Swift 能很好的交互，所以在同一个项目中可以很容易的同时使用两者。&lt;/p&gt;

&lt;h4 id=&#34;在-swift-文件中使用-objective-c-写的代码:e0b5762b2f2ffeaad5924c2f723e02a2&#34;&gt;在 Swift 文件中使用 Objective-C 写的代码&lt;/h4&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;你可以在一个我们称它为 &lt;code&gt;bridging-header&lt;/code&gt; 文件里面导入 Objective-C 文件。Xcode 会把这些（Objc 文件）转换成 Swift 可用，后面使用起来就感觉和 Swift 一样了。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;创建 &lt;code&gt;bridging-header&lt;/code&gt; 文件很容易，新建 Objective-C 类的时候，如果你的项目里面还没有 &lt;code&gt;bridging-header&lt;/code&gt; 文件，Xcode 会提示你来新建（译注：确认之后建立的文件名是：项目名-Bridging-Header.h）。当然你可以选择不创建而自己手动来建立，直接新建 Objective-C 头文件，取名：Bridging-Header.h（译注：你也可以另外取个），然后定位到 “Build Settings”
 里面的 “Swift Compiler – Code generation” 设置项，把 “Objective-C Bridging Header” 设置成刚才的文件名。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Books</title>
      <link>http://shitoudev.github.io/books/</link>
      <pubDate>Wed, 27 Jan 2016 10:55:37 CST</pubDate>
      
      <guid>http://shitoudev.github.io/books/</guid>
      <description>这个页面记录自己读书相关，目标很简单一个月至少一本书。 &amp;emsp;&amp;emsp;还记得上学时只看过两本小说书籍：《三国演义》、《骆驼祥子》，可能是我看的书比较少，确实很喜欢这两本书。除了这两本再也没看过一本完整的书籍（当然是除了课本啦），那会儿有打算把红楼梦看看的，名著嘛，有天然的吸引力，可是我对红楼梦确实提不起兴趣，宝玉什么的（因为没看过所以不知道里面讲什么，只是感觉不喜欢），后来也就没看了。 &amp;emsp;&amp;emsp;2013年买了两本书：《创新者的窘境》、《爱和自由》，居然到现在也没看完，真的要抽自己两下了。2015年下半年开始准备好好阅读，把 iPad 收起来，买了 kindle，不能否认 kindle 很适合沉浸式阅读，最重要它相比 iPad 或者电脑屏幕能更好的保护眼睛，看时间长眼睛也不会干涩，携带也很方便。 列表 2016年 1月份 创业维艰 - 本∙霍洛维茨 2015年 9月份 人类简史：从动物到上帝 - 尤瓦尔·赫拉利 10月份 - 11月份 中国近代史 - 徐中约港版 12月份 说话的魅力 - 刘墉 很多年前 三国演义 - 罗贯中 骆驼祥子 - 老舍</description>
    </item>
    
    <item>
      <title>Network Link Conditioner</title>
      <link>http://shitoudev.github.io/post/network-link-conditioner/</link>
      <pubDate>Wed, 20 Jan 2016 17:09:20 CST</pubDate>
      
      <guid>http://shitoudev.github.io/post/network-link-conditioner/</guid>
      <description>&lt;p&gt;作者：Thomas Hanning &lt;a href=&#34;http://www.thomashanning.com/network-link-conditioner/&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;在这篇文章里，我们将讨论通过使用 Network Link Conditioner 来模拟网络条件不好的情况。&lt;/p&gt;

&lt;h5 id=&#34;糟糕的网络链接:2fa8e3941c8e72e78934040f1654da1f&#34;&gt;糟糕的网络链接&lt;/h5&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;iOS应用的运行环境相对于桌面计算机软件的运行环境要艰难的多，你只有有限的内存和CPU资源，更糟的是网络链接也不稳定。我们不仅在家里会使用应用，在火车上也会，当我们在咖啡店里面使用的时候，会有其他很多的手机应用都依赖一个网络，所以提供良好的用户体验是至关重要的，即使是在糟糕的网络环境下。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在 Swift 中的父类里面使用 IBInspectable 属性</title>
      <link>http://shitoudev.github.io/post/adding-ibinspectable-to-a-superclass-in-swift/</link>
      <pubDate>Wed, 20 Jan 2016 12:28:30 CST</pubDate>
      
      <guid>http://shitoudev.github.io/post/adding-ibinspectable-to-a-superclass-in-swift/</guid>
      <description>&lt;p&gt;作者：Jameson Quave &lt;a href=&#34;http://jamesonquave.com/blog/adding-ibinspectable-to-a-superclass-in-swift/&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;一个非常有用的功能就是在代码里面添加 IBInspectable 属性的背景图片。在一个娱乐类的应用里面，我写了一个可设计的 Cell，代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@IBDesignable
class TrailerCollectionViewCell: MediaCollectionViewCell {
    @IBOutlet weak var lengthLabel: UILabel!
    @IBInspectable weak var bgImage: UIImage! {
        didSet {
            imgView.frame = self.bounds
            self.addSubview(imgView)
            imgView.image = bgImage
            imgView.contentMode  = UIViewContentMode.Center
            self.sendSubviewToBack(imgView)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Swift Magic: Public Getter, Private Setter</title>
      <link>http://shitoudev.github.io/post/swift-magic-public-getter-private-setter/</link>
      <pubDate>Tue, 12 Jan 2016 11:13:59 CST</pubDate>
      
      <guid>http://shitoudev.github.io/post/swift-magic-public-getter-private-setter/</guid>
      <description>&lt;p&gt;作者：Natasha The Robot &lt;a href=&#34;https://www.natashatherobot.com/swift-magic-public-getter-private-setter/&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;在我的这篇 &lt;a href=&#34;https://www.natashatherobot.com/swift-dependency-injection-with-a-custom-initializer/&#34;&gt;Constructor Injection&lt;/a&gt; blog中，我写了一个结构体的例子，它有一个属性，属性可以从外部读取，但是写权限只能在内部，之前的代码看起来是这样的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;struct Counter {
    // `count` here has to be a var 
    // but I never want to set the `count` externally, 
    // so I made it private
    private var count: Int

    // so this is the only way to access the count externally
    func getCount() {
        return count
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://shitoudev.github.io/about/</link>
      <pubDate>Fri, 08 Jan 2016 11:54:41 CST</pubDate>
      
      <guid>http://shitoudev.github.io/about/</guid>
      <description>很喜欢这张和我儿子的照片 87年来自湖南株洲在上海拼搏的人！ 虽然还没找到归属感，不过这又怎样呢，归属感都是自己YY出来的，找到自己喜欢的事、找到自己的价值所在，为自己和家庭的未来奋斗吧！ 喜欢曼联、喜欢跑步（膝盖受伤之后没有坚持下去，2016年再战），再有就是16年开始要游泳，为了我的腰间盘不再回来。 认真对待生活！</description>
    </item>
    
    <item>
      <title>在iOS应用内打开PDF文件</title>
      <link>http://shitoudev.github.io/post/%E5%9C%A8iOS%E5%BA%94%E7%94%A8%E5%86%85%E6%89%93%E5%BC%80PDF%E6%96%87%E4%BB%B6/</link>
      <pubDate>Thu, 07 Jan 2016 17:13:17 CST</pubDate>
      
      <guid>http://shitoudev.github.io/post/%E5%9C%A8iOS%E5%BA%94%E7%94%A8%E5%86%85%E6%89%93%E5%BC%80PDF%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;&amp;emsp;&amp;emsp;作者：Arthur Knopper &lt;a href=&#34;http://www.ioscreator.com/tutorials/open-pdf-tutorial&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;在iOS应用内显示PDF文件内容可以使用Web View来解决，这篇文章将从本地读取PDF文件并显示到屏幕上。教程的代码使用Xcode7.1、iOS9编译运行。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;打开Xcode新建一个新的名字为“IOS9OpenPDFTutorial”的项目，语言选择Swift，设备选择iPhone，其他随意。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://shitoudev.github.io/images/openpdf/download.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

